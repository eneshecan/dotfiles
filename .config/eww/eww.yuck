;; TODO Make windows transparent and have their corners rounded
;; TODO Add cpu 

(defwidget weather_side [] 
  (box :orientation "h" :space-evenly "false" 
    (box :class "weather-icon-side" :style "color: ${weather-hex}" "${get-weather}${weather-icon}")
    (box :class "weather-info-side" :orientation "v" :space-evenly "false"
      (box :class "temperature-side" "${temperature} ")
      (box :class "weather-stat-side" weather-stat-side))))

(defwidget player_side []
  (box :orientation "h" :space-evenly "false"
    (box :class "musicart-side" art)
    (box :class "musicstuff-side" :orientation "v" :space-evenly "false"
      (box :class "musicinfo-side" music_artist)
      (box :class "musicinfo-side" music_title)
      (box :orientation "h" :halign "center" :class "musicbtn-side" :space-evenly "false"
        (button :onclick "playerctl previous" "玲")
         (button :class "pause-play-side" :onclick "playerctl play-pause" "懶")
        (button :onclick "playerctl next" "怜")))))
  
(defwidget time_side []
  (box :orientation "v" :class "time-side" :space-evenly "true"
    (box :class "clock-side" clock)
    (box :class "day-side" day)))

(defwidget sliders_side [] 
  (box :orientation "v" :space-evenly "false" :class "sliders-side" 
    (box :orientation "h" :class "slider-vol-side" :space-evenly "false" 
      (box :class "label-vol-side" "")
      (scale :min 0 :max 101 :value volume :onchange "pamixer --set-volume {}"))
    (box :orientation "h" :class "slider-bright-side" :space-evenly "false"
      (box :class "label-bright-side" "")
      (scale :min 0 :max 101 :value bright :onchange "light -S {}"))
    (box :orientation "h" :class "slider-ram-side" :space-evenly "false"
      (box :class "label-ram-side" "")
      (scale :min 0 :active "false" :max 101 :value ram-used))
    (box :orientation "h" :class "slider-battery-side" :space-evenly "false"
      (box :class "label-battery-side" "")
      (scale :min 0 :active "false" :max 101 :value battery-remaining))))

(defwidget sys_side []
  (box :orientation "h" :halign "center" :class "sysbtn" :space-evenly "true" 
      (button :class "shutdown-side" :onclick "~/.config/eww/scripts/shutdown.sh" "襤")
      (button :class "reboot-side" :onclick "~/.config/eww/scripts/reboot.sh" "漏")
      (button :class "lock-side" :onclick "~/.config/eww/scripts/lockscreen.sh" "")
      (button :class "suspend-side" :onclick "~/.config/eww/scripts/suspend.sh" "⏾")
      (button :class "logout-side" :onclick "~/.config/eww/scripts/logout.sh" "﫼 ")))

(defwidget quotes_side []
  (box :orientation "v" :space-evenly "false" :class "quote-box"
    (label :class "weather-quote" :text weather-quote :halign "start" :wrap "true")
    (label :class "weather-quote2" :text weather-quote2 :halign "start" :wrap "true")
    (label :class "weather-quote2" :text "" :halign "start" :wrap "true")
    (label :class "quote-main" :halign "start" :text "${get-quotes}${quote-gen}${quote}" :wrap "true" :width 25)
    (label :class "quote-tail" :halign "start" :text quote-tail :wrap "true" :width 25)
    (label :class "quote-author" :text "- ${author-quote}" :halign "end" :wrap "true")))

(defwidget calendar_side []
  (box :orientation "v" :halign "center" :space-evenly "false"
    (box :class "calendar_title" " ${day}, ${number_day} ${month_full} ${year_full}")
    (box :class "calendar" 
      (calendar :show-details "true" ))))
      


;;  Music vars
(defpoll music_title :interval "5s"  "~/.config/eww/scripts/gettitle")
(defpoll music_artist :interval "5s"  "~/.config/eww/scripts/getartist")
(defpoll art :interval "5s"  "~/.config/eww/scripts/getart")
(defpoll volume :interval "3ms"  "~/.config/eww/scripts/getvol")
(defpoll bright :interval "1ms"  "~/.config/eww/scripts/getbri")
(defpoll cover :interval "5s"  "~/.config/eww/scripts/echoart")

;; Date vars
(defpoll number_day :interval "5h"  "date \"+%d\"")
(defpoll month :interval "10h"  "date \"+%b\"")
(defpoll clock :interval "10s"  "date \"+%I:%M %p\"")
(defpoll day :interval "15h"  "~/.config/eww/scripts/getday")
(defpoll month_full :interval "15h"  "date \"+%B\"")
(defpoll year_full :interval "15h"  "date \"+%Y\"")

;; Weather vars
(defpoll get-weather :interval "20m"  "~/.config/eww/scripts/getweather > /dev/null")
(defpoll weather-icon :interval "20m"  "cat /tmp/eww/weather/weather-icon")
(defpoll temperature :interval "20m"  "cat /tmp/eww/weather/weather-degree")
(defpoll weather-hex :interval "20m"  "cat /tmp/eww/weather/weather-hex")
(defpoll weather-quote :interval "20m"  "~/.config/eww/scripts/getwethquote")
(defpoll weather-quote2 :interval "20m"  "~/.config/eww/scripts/getwethquote2")
(defpoll weather-stat :interval "20m"  "cat /tmp/eww/weather/weather-stat")
(defpoll weather-stat-side :interval "20m"  "~/.config/eww/scripts/weather-trimmer")

;; Big brain RAM vars
(defpoll ram-used :interval "1s"  "~/.config/eww/scripts/getram")

;; Battery charge vars
(defpoll battery-remaining :interval "2m"  "cat /sys/class/power_supply/BAT0/capacity")
(defpoll bat-icon :interval "2m"  "~/.config/tint2/scripts/battery.sh")

;;  Home-dir stuff 
(defpoll l1-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l1-processed")
(defpoll l2-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l2-processed")
(defpoll l3-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l3-processed")
(defpoll l4-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l4-processed")
(defpoll l5-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l5-processed")
(defpoll l6-processed :interval "20h"  "~/.config/eww/scripts/home-dir/l6-processed")
(defpoll l1 :interval "20h"  "~/.config/eww/scripts/home-dir/l1")
(defpoll l2 :interval "20h"  "~/.config/eww/scripts/home-dir/l2")
(defpoll l3 :interval "20h"  "~/.config/eww/scripts/home-dir/l3")
(defpoll l4 :interval "20h"  "~/.config/eww/scripts/home-dir/l4")
(defpoll l5 :interval "20h"  "~/.config/eww/scripts/home-dir/l5")
(defpoll l6 :interval "20h"  "~/.config/eww/scripts/home-dir/l6")

;;  Quote vars 
(defpoll get-quotes :interval "60m"  "~/.config/eww/scripts/getquotes")
(defpoll author-quote :interval "10m"  "cat /tmp/eww/quotes/author")
(defpoll quote :interval "10m"  "cat /tmp/eww/quotes/quote")
(defpoll quote-gen :interval "30m"  "~/.config/eww/scripts/quotes")
(defpoll quote-tail :interval "10m"  "cat /tmp/eww/quotes/quote-tail")

;; Vpn stats
(defpoll getvpnstat :interval "10s"  "~/.config/eww/scripts/getvpnstat")
(defpoll vpn-hex :interval "10s"  "cat /tmp/eww/vpnstat-hex")




;;  Sidebar 

(defwindow time_side
  :wm-ignore true
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "1590px"
                      :y "10px"
                      :width "60px"
                      :height "80px")
(time_side))

(defwindow weather_side 
  :wm-ignore true
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "1715px"
                      :y "10px"
                      :width "195px"
                      :height "80px")
(weather_side))

(defwindow quotes_side
  :wm-ignore true
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "1590px"
                      :y "95px"
                      :width "320px"
                      :height "180px")
(quotes_side))

(defwindow calendar_side
  :wm-ignore true
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "1590px"
                      :y "280px"
                      :width "320px"
                      :height "165px")
(calendar_side))

(defwindow player_side
  :wm-ignore true
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "1590px"
                      :y "530px"
                      :width "320px"
                      :height "110px")
(player_side))

(defwindow sliders_side
  :wm-ignore true
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "1590px"
                      :y "645px"
                      :width "320px"
                      :height "205px")
(sliders_side))

(defwindow sys_side
  :wm-ignore true
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "1590px"
                      :y "855px"
                      :width "320px"
                      :height "60px")
(sys_side))

